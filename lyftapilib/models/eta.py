# -*- coding: utf-8 -*-

"""
    lyftapilib.models.eta
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 11/14/2016
"""
from .base_model import BaseModel

class Eta(BaseModel):

    """Implementation of the 'Eta' model.

    Estimated Time of Arrival

    Attributes:
        ride_type (RideTypeEnum): The ID of the ride type
        display_name (string): A human readable description of the ride type
        eta_seconds (int): Estimated seconds for a driver to arrive
        is_valid_estimate (bool): The validity of the ETA estimate returned

    """

    def __init__(self, 
                 ride_type = None,
                 display_name = None,
                 eta_seconds = None,
                 is_valid_estimate = None):
        """Constructor for the Eta class"""
        
        # Initialize members of the class
        self.ride_type = ride_type
        self.display_name = display_name
        self.eta_seconds = eta_seconds
        self.is_valid_estimate = is_valid_estimate

        # Create a mapping from Model property names to API property names
        self.names = {
            "ride_type" : "ride_type",
            "display_name" : "display_name",
            "eta_seconds" : "eta_seconds",
            "is_valid_estimate" : "is_valid_estimate",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            ride_type = dictionary.get("ride_type")
            display_name = dictionary.get("display_name")
            eta_seconds = dictionary.get("eta_seconds")
            is_valid_estimate = dictionary.get("is_valid_estimate")
            # Return an object of this model
            return cls(ride_type,
                       display_name,
                       eta_seconds,
                       is_valid_estimate)
