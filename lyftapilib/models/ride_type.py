# -*- coding: utf-8 -*-

"""
    lyftapilib.models.ride_type
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 11/14/2016
"""
from .pricing_details import PricingDetails
from .base_model import BaseModel

class RideType(BaseModel):

    """Implementation of the 'RideType' model.

    TODO: type model description here.

    Attributes:
        ride_type (RideTypeEnum): The ID of the ride type
        display_name (string): A human readable description of the ride type
        seats (int): The maximum number of seats available for rides requested
            with this ride type
        image_url (string): The URL of an image representing this ride type
        pricing_details (PricingDetails): TODO: type description here.
        scheduled_pricing_details (PricingDetails): TODO: type description
            here.

    """

    def __init__(self, 
                 ride_type = None,
                 display_name = None,
                 seats = None,
                 image_url = None,
                 pricing_details = None,
                 scheduled_pricing_details = None):
        """Constructor for the RideType class"""
        
        # Initialize members of the class
        self.ride_type = ride_type
        self.display_name = display_name
        self.seats = seats
        self.image_url = image_url
        self.pricing_details = pricing_details
        self.scheduled_pricing_details = scheduled_pricing_details

        # Create a mapping from Model property names to API property names
        self.names = {
            "ride_type" : "ride_type",
            "display_name" : "display_name",
            "seats" : "seats",
            "image_url" : "image_url",
            "pricing_details" : "pricing_details",
            "scheduled_pricing_details" : "scheduled_pricing_details",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            ride_type = dictionary.get("ride_type")
            display_name = dictionary.get("display_name")
            seats = dictionary.get("seats")
            image_url = dictionary.get("image_url")
            pricing_details = PricingDetails.from_dictionary(dictionary.get("pricing_details")) if dictionary.get("pricing_details") else None
            scheduled_pricing_details = PricingDetails.from_dictionary(dictionary.get("scheduled_pricing_details")) if dictionary.get("scheduled_pricing_details") else None
            # Return an object of this model
            return cls(ride_type,
                       display_name,
                       seats,
                       image_url,
                       pricing_details,
                       scheduled_pricing_details)
